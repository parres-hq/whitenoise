name: CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  check:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: native
          - os: macos-latest
            target: native
          - os: macos-14
            target: native
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust (nightly for checks)
        if: matrix.target == 'native' && matrix.os == 'ubuntu-latest'
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2025-03-12
          components: rustfmt, clippy

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Check
        run: cargo check --all-targets --all-features

      - name: Build
        run: cargo build --all-targets --all-features

      - name: Format check
        if: matrix.target == 'native' && matrix.os == 'ubuntu-latest'
        run: cargo +nightly-2025-03-12 fmt --all -- --config format_code_in_doc_comments=true --check

      - name: Documentation check
        if: matrix.target == 'native' && matrix.os == 'ubuntu-latest'
        run: cargo +nightly-2025-03-12 doc --no-deps --all-features

      - name: Lint
        if: matrix.target == 'native' && matrix.os == 'ubuntu-latest'
        run: cargo +nightly-2025-03-12 clippy --all-targets --all-features --no-deps -- -D warnings

      - name: Test native
        if: matrix.target == 'native'
        run: cargo test --all-features
