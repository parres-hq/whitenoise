name: "iOS Build"

on:
  workflow_call:
    secrets:
      APPLE_ID:
        required: true
      APPLE_PASSWORD:
        required: true
      APPLE_TEAM_ID:
        required: true
      APPLE_API_ISSUER:
        required: true
      APPLE_API_KEY:
        required: true
      APPLE_API_KEY_PATH:
        required: true
      KEYCHAIN_PASSWORD:
        required: true
  push:
    branches:
      - master
    paths:
      - 'src-tauri/**'
      - 'src/**'
      - 'static/**'
      - 'package.json'
      - 'bun.lockb'
      - 'svelte.config.js'
      - 'tailwind.config.js'
      - 'vite.config.js'
      - '.github/workflows/build_ios.yml'
  pull_request:
    paths:
        - 'src-tauri/**'
        - 'src/**'
        - 'static/**'
        - 'package.json'
        - 'bun.lockb'
        - 'svelte.config.js'
        - 'tailwind.config.js'
        - 'vite.config.js'
        - '.github/workflows/build_ios.yml'

# Add concurrency group to cancel redundant workflow runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-ios:
    #disabled for now
    if: false
    runs-on: macos-latest
    env:
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
      APPLE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID }}

    steps:
      - uses: actions/checkout@v4

      - name: Cache bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.1.39

      - name: Add Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src-tauri -> target"
          cache-directories: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ios-${{ runner.os }}

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-ios,x86_64-apple-ios

      - name: Install frontend dependencies
        run: bun install

      - name: Build iOS App
        run: |
          bun tauri ios build

      - name: Upload to TestFlight
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APPLE_PASSWORD: ${{ secrets.APPLE_PASSWORD }}
        run: |
          xcrun altool --upload-app --type ios --file "src-tauri/gen/ios/whitenoise.ipa" \
            --username "$APPLE_ID" \
            --password "$APPLE_PASSWORD"

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: src-tauri/gen/ios/whitenoise.ipa
